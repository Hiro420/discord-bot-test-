const color = require('colors')
const { Collection, DiscordAPIError } = require('discord.js')
const database = require('./db.js')

/**
 * 
 * @param {Client} client
 * @param {Database} database
 * @example
 * const { Plugins } = require('discord.js-extend')
 * const client = new Discord.Client(...)
 * client.funcs = new Plugins(client)
 */
class Plugins {
  constructor(client, db = database) {
    this.client = client
    this.client.db = db
  }

  /**
   * @returns the user's banner
   * @param {String} user the user's id
   * @param {Boolean} dynamic whether the banner can be animated or not
   * @example
   * 
   * client.funcs.userBanner('788869971073040454', true)
   */
  userBanner = async (user, dynamic = true) => {
    const u = await this.this.client.api.users(user).get()
    return u?.banner || null
  }

  /**
   * Finds a user
   * @returns the user's id
   * @param {Message} message this is required to filter for mentions
   * @param {Number|String} filter user name, tag or id
   * @example
   * client.funcs.findUser(message, 'Pavez')
   */
  findUser = async (message, filter = message?.mentions?.users?.first()) => {
    let result = undefined
    try {
      result = await this.client.users.find(u => {
        return u.username.toLowerCase() === filter.toLowerCase() ||
          u.tag.toLowerCase() === filter.toLowerCase() ||
          (await this.client.users.cache.get(filter)) ||
          (await this.client.users.fetch(filter)) ||
          (await message?.mentions?.users?.first()) ||
          { id: undefined }
      })
    } catch {
      result = { id = undefined }
    }
    return result.id
  }

  /**
   * Finds a user
   * @returns the user's id
   * @param {Message} message  this is required to filter for mentions
   * @param {Number|String} filter member name, tag or id
   * @param {Guild} guild the server from which the user was searched
   * @example
   * client.funcs.findUser(message, 'Pavez', client.guilds.cache.get('1234'))
   */
  findMember = async (message, filter, guild = message.guild) => {
    let result = undefined
    try {
      result = await guild.members.cache.find(u => {
        return u.username.toLowerCase() === filter.toLowerCase() ||
          u.tag.toLowerCase() === filter.toLowerCase() ||
          (await guild.members.cache.get(filter)) ||
          (await guild.members.fetch(filter)) ||
          (await message?.mentions?.users?.first()) ||
          { id: undefined }
      })
    } catch {
      result = { id = undefined }
    }
    return result.id
  }
}

module.exports = { Plugins }